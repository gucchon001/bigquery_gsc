# 機能要件仕様書

## 1. システム概要
このプログラムは、Google Search Console（GSC）からデータを取得し、BigQueryに保存するシステムです。主なユーザーは、SEOデータを分析するためにGSCデータを定期的に収集し、ビジネスインテリジェンスツールで活用したいと考えているデータアナリストやマーケティング担当者です。プログラムは自動化されたデータ収集とデータベース管理を提供し、データの可視化や分析を支援します。

## 2. 主要機能要件
- **GSCデータ取得**: 
  - `GSCConnector`クラスを利用して、指定された日付範囲のGSCデータを取得します。
  - データは指定されたURLとクエリに基づいて取得されます。

- **データ集計と正規化**:
  - `url_utils`モジュールで提供される関数を使用して、取得したデータをURLごとに集計し、クリック数、インプレッション数、平均順位を計算します。

- **BigQueryへのデータ挿入**:
  - 集計されたデータをBigQueryに挿入します。データの挿入はリトライロジックを用いて確実に行われます。

- **進捗管理**:
  - データ取得の進捗状況をBigQueryに保存し、次回のデータ取得時に再開位置を決定します。

- **設定と環境管理**:
  - `.env`ファイルと`settings.ini`を用いて、APIキーやデータ取得設定を管理します。

- **エラーハンドリングとロギング**:
  - ログ出力を通じて、システムの動作状況を記録し、エラー時には詳細な情報を提供します。

## 3. 非機能要件
- **パフォーマンス**:
  - データ取得のクォータ制限を考慮し、効率的にAPIを呼び出します。
  - データベースへの挿入はバッチ処理で行い、効率を最適化します。

- **セキュリティ**:
  - セキュリティ情報（APIキーや認証情報）は環境変数や設定ファイルで管理し、直接コードに埋め込まないようにしています。
  - `.gitignore`を利用し、機密情報がバージョン管理システムに登録されないようにしています。

- **可用性**:
  - プログラムは障害が発生した際に再試行を行い、可能な限りデータの取得を続行します。
  - データ取得の進捗をトラッキングし、再起動後も処理を再開できるように設計されています。

## 4. 技術要件
- **開発環境**:
  - Python 3.xが必要です。

- **外部ライブラリ**:
  - `google-cloud-bigquery`、`google-auth`、`google-api-python-client`、`python-dotenv`、`openai`、`icecream`などが必要です。これらは`requirements.txt`で指定されています。

- **システム環境**:
  - Google Cloud Platformのサービス（BigQuery、Google Search Console API）へのアクセス権が必要です。
  - 環境変数や設定ファイルを適切に設定し、認証情報を提供する必要があります。

- **依存関係**:
  - `dotenv`を使用して環境変数を管理し、`configparser`を使用して設定ファイルを読み込みます。
  - `anytree`を利用してディレクトリ構造を可視化します。